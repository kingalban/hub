capabilities:
- about
- schema-flattening
- stream-maps
description: Free and Open, Distributed, RESTful Search Engine
domain_url: https://github.com/elastic/elasticsearch
executable: target-elasticsearch
keywords:
- meltano_sdk
label: Elasticsearch
logo_url: /assets/logos/loaders/elasticsearch.png
maintenance_status: active
name: target-elasticsearch
namespace: target_elasticsearch
next_steps: ''
pip_url: target-elasticsearch
quality: silver
repo: https://github.com/dtmirizzi/target-elasticsearch
settings:
- description: api key for auth key authorization
  kind: password
  label: API Key
  name: api_key
- description: api key id for auth key authorization
  kind: password
  label: API Key ID
  name: api_key_id
- description: bearer token for bearer authorization
  kind: password
  label: Bearer Token
  name: bearer_token
- description: "'True' to enable schema flattening and automatically expand nested
    properties."
  kind: boolean
  label: Flattening Enabled
  name: flattening_enabled
- description: The max depth to flatten schemas.
  kind: integer
  label: Flattening Max Depth
  name: flattening_max_depth
- description: host used to connect to elasticsearch
  kind: string
  label: Host
  name: host
  value: localhost
- description: "Index Format is used to handle custom index formatting such as specifying
    `-latest` index.\n    ie. the default index string defined as:\n    `ecs-{{ stream_name
    }}-{{ current_timestamp_daily}}` -> `ecs-animals-2022-12-25` where the stream
    name was animals\n\n    Default options:\n    Daily `{{ current_timestamp_daily
    }}` -> 2022-12-25,\n    Monthly `{{ current_timestamp_monthly }}`->  2022-12,\n\
    \    Yearly `{{ current_timestamp_yearly }}` -> 2022.\n    You can also use fields
    mapped in `index_schema_fields` such as `{{ x }}` or `{{ timestamp }}`.\n\n  \
    \  There are also helper functions such as:\n    to daily `{{ to_daily(timestamp)
    }}`,\n    to monthly `{{ to_monthly(timestamp) }}`,\n    to yearly `{{ to_yearly(timestamp)
    }}`\n            "
  kind: string
  label: Index Format
  name: index_format
  value: ecs-{{ stream_name }}-{{ current_timestamp_daily}}
- description: "Index Schema Fields allows you to specify specific record values via
    jsonpath\n    from the stream to be used in index formulation.\n    ie. if the
    stream record looks like `{\"id\": \"1\", \"created_at\": \"12-13-202000:01:43Z\"\
    }`\n    and we want to index the record via create time.\n    we could specify
    a mapping like `index_timestamp: created_at`\n    in the `index_format` we could
    use a template like `ecs-animals-{{ to_daily(index_timestamp) }}`\n    this would
    put this record onto the index  `ecs-animals-2020-12-13`"
  kind: object
  label: Index Schema Fields
  name: index_schema_fields
- description: "Metadata Fields can be used to pull out specific fields via jsonpath
    to be\n    used on for [ecs metadata patters](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-fields.html)\n\
    \    This would best be used for data that has a primary key.\n    ie. `{\"guid\"\
    : 102, \"foo\": \"bar\"}`\n    then create a mapping of `_id: guid"
  kind: object
  label: Metadata Fields
  name: metadata_fields
- description: basic auth password
  kind: password
  label: Password
  name: password
- description: port use to connect to elasticsearch
  kind: integer
  label: Port
  name: port
  value: 9200
- description: http scheme used for connecting to elasticsearch
  kind: string
  label: Scheme
  name: scheme
  value: http
- description: location of the the SSL certificate for cert verification ie. `/some/path`
  kind: string
  label: SSL Ca File
  name: ssl_ca_file
- description: User-defined config values to be used within map expressions.
  kind: object
  label: Stream Map Config
  name: stream_map_config
- description: Config object for stream maps capability. For more information check
    out [Stream Maps](https://sdk.meltano.com/en/latest/stream_maps.html).
  kind: object
  label: Stream Maps
  name: stream_maps
- description: basic auth username
  kind: string
  label: Username
  name: username
settings_group_validation:
- - host
  - port
  - scheme
settings_preamble: ''
usage: ''
variant: dtmirizzi
